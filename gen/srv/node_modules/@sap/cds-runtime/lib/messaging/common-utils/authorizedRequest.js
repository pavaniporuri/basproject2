const cds = require('../../cds')
const LOG = cds.log('messaging')

const https = require('https')
const requestToken = require('../http-utils/token')

const authorizedRequest = ({
  method,
  uri,
  path,
  oa2,
  dataObj,
  tokenStore,
  attemptInfo,
  rejectString,
  successString
}) => {
  attemptInfo()
  return new Promise((resolve, reject) => {
    ;((tokenStore.token && Promise.resolve(tokenStore.token)) || requestToken(oa2, tokenStore))
      .catch(err => reject(err))
      .then(token => {
        const httpOptions = {
          host: uri.replace('https://', ''),
          path,
          headers: {
            Authorization: 'Bearer ' + token
          },
          method
        }

        let data
        if (dataObj) {
          data = JSON.stringify(dataObj)
          httpOptions.headers['Content-Type'] = 'application/json'
          httpOptions.headers['Content-Length'] = data.length
        }

        const req = https.request(httpOptions, res => {
          res.setEncoding('utf8')
          let chunks = ''
          res.on('data', chunk => {
            chunks += chunk
          })
          res.on('end', () => {
            if (res.statusCode !== 200 && res.statusCode !== 201 && res.statusCode !== 204) {
              const result = { body: chunks, statusCode: res.statusCode }
              LOG._error && LOG.error('HTTP request failed', result)
              reject(new Error(rejectString))
            }

            LOG._debug && LOG.debug(successString)

            resolve()
          })
        })

        if (data) req.write(data)
        req.end()
      })
  })
}

module.exports = authorizedRequest
