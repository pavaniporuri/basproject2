const { isDraftEnabled } = require('../../../common/utils/draft')
const { DRAFT_COLUMNS_UNION } = require('../../../common/constants/draft')

/**
 * This method gets all columns for an entity.
 * It includes the generated foreign keys from managed associations, structured elements and complex and custom types.
 * As well, it provides the annotations starting with '@' for each column.
 *
 * @param entity - the csn entity
 * @param onlyNames - decides if the column name or the csn representation of the column should be returned
 * @param filterDraft - if entity is draft enabled, this param decivdes if draft columns should be included
 * @returns {Array} - array of columns
 */
const getColumns = (entity, { onlyNames = false, removeIgnore = false, filterDraft = true, filterVirtual = false }) => {
  const skipDraft = filterDraft && isDraftEnabled(entity)
  const columns = []
  for (const each in entity.elements) {
    const e = entity.elements[each]
    if (e.isAssociation) continue
    if (filterVirtual && e.virtual) continue
    if (removeIgnore && e['@cds.api.ignore']) continue
    if (skipDraft && DRAFT_COLUMNS_UNION.includes(each)) continue
    columns.push(onlyNames ? each : e)
  }
  return columns
}

module.exports = getColumns
