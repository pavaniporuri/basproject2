import { Destination, DestinationNameAndJwt } from '../connectivity/scp-cf';
import type { ConstructorType, FunctionReturnType, ParametersType, UnwrapAxiosResponse } from './types';
/**
 * @experimental This API is experimental and might change in newer versions. Use with caution.
 * Generic request builder for building and executing requests based on apis generated by the OpenAPI generator.
 * @typeparam ApiT Interface of the generated api. All properties of the interface will be treated as functions.
 * @typeparam FnT Literal string type of the function name, must be a key of `ApiT` and represent a function.
 */
export declare class OpenApiRequestBuilder<ApiT, FnT extends keyof ApiT> {
    private apiConstructor;
    fn: FnT;
    private customHeaders;
    private args;
    /**
     * Create an instance of `RestRequestBuilder`.
     * @param apiConstructor Constructor of the underlying OpenApi api definition.
     * @param fn Name of the function represented in thie request builder.
     * @param args Arguments to pass to the api function.
     */
    constructor(apiConstructor: ConstructorType<ApiT>, fn: FnT, ...args: ParametersType<ApiT, FnT>);
    /**
     * Add custom headers to the request. If a header field with the given name already exists it is overwritten.
     *
     * @param headers Key-value pairs denoting additional custom headers
     * @returns The request builder itself, to facilitate method chaining
     */
    addCustomHeaders(headers: Record<string, string>): this;
    /**
     * Execute request and get a raw AxiosResponse, including all information about the HTTP response.
     * This especially comes in handy, when you need to access the headers or status code of the response.
     * @param destination Destination to execute the request against.
     * @param options Options to employ when fetching destinations.
     * @returns A promise resolving to an AxiosResponse.
     */
    executeRaw(destination: Destination | DestinationNameAndJwt): Promise<FunctionReturnType<ApiT, FnT>>;
    /**
     * Execute request and get the response data. Use this to conveniently access the data of a service without technical information about the response.
     * @param destination Destination to execute the request against.
     * @param options Options to employ when fetching destinations.
     * @returns A promise resolving to the requested return type.
     */
    execute(destination: Destination | DestinationNameAndJwt): Promise<UnwrapAxiosResponse<FunctionReturnType<ApiT, FnT>>>;
}
//# sourceMappingURL=openapi-request-builder.d.ts.map